/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uasoop;
import java.sql.ResultSet;
import java.util.Arrays;
import java.util.stream.IntStream;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author curut
 */
public class ShowDataFrame extends javax.swing.JFrame {

	/**
	 * Creates new form ShowDataFrame
	 */
	boolean isUpdating = false;
	String selectedId = "";
	public ShowDataFrame() {
		initComponents();
	}
	private void resetForm(){
		buyerNameTf.setText("");
		mattressFeelTf.setText("");
		mattressTypeTf.setText("");
		quantityTf.setText("");
		sizeTf.setText("");
		deleteDataBtn.setVisible(false);
		refreshData();
	}
	private void refreshData(){
//		kosongkan data
                DefaultTableModel tableModel1= (DefaultTableModel)showDataTable.getModel();
		tableModel1.setRowCount(0);
                Connect conn = new Connect();
                ResultSet rs = conn.executeQuery("select * from mattress;");
                try{
                        while(rs.next()){
                                String id = rs.getString("ID");
                                String buyerName= rs.getString("BuyerName");
                                String matressType= rs.getString("MattressType");
                                String matressFeel= rs.getString("MattressFeel");
                                String size= rs.getString("size");
                                String qty= String.valueOf(rs.getString("Qty"));
                                String totalPrice= String.valueOf(rs.getString("TotalPrice"));
                                String tableData[] = {id, buyerName, matressType, matressFeel, size, qty, totalPrice};
                                DefaultTableModel tableModel= (DefaultTableModel)showDataTable.getModel();
                                tableModel.addRow(tableData);
                        }
                }catch(Exception e){
                        System.out.println("" + e);
                }
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                jScrollPane1 = new javax.swing.JScrollPane();
                showDataTable = new javax.swing.JTable();
                showDatabtn = new javax.swing.JButton();
                jLabel1 = new javax.swing.JLabel();
                buyerNameTf = new javax.swing.JTextField();
                jLabel2 = new javax.swing.JLabel();
                sizeTf = new javax.swing.JTextField();
                jLabel3 = new javax.swing.JLabel();
                mattressFeelTf = new javax.swing.JTextField();
                jLabel4 = new javax.swing.JLabel();
                mattressTypeTf = new javax.swing.JTextField();
                jLabel5 = new javax.swing.JLabel();
                quantityTf = new javax.swing.JTextField();
                deleteDataBtn = new javax.swing.JButton();
                errorMessageTxt = new javax.swing.JLabel();
                addDataBtn = new javax.swing.JButton();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

                showDataTable.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {
                                "ID", "BuyerName", "MatressType", "MatressFeel", "Size", "Qty", "TotalPrice"
                        }
                ) {
                        boolean[] canEdit = new boolean [] {
                                false, true, true, true, true, true, false
                        };

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit [columnIndex];
                        }
                });
                showDataTable.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                showDataTableMouseClicked(evt);
                        }
                });
                jScrollPane1.setViewportView(showDataTable);

                showDatabtn.setText("Show Data");
                showDatabtn.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                showDatabtnActionPerformed(evt);
                        }
                });

                jLabel1.setText("Buyer Name:");

                buyerNameTf.setToolTipText("");
                buyerNameTf.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                buyerNameTfActionPerformed(evt);
                        }
                });

                jLabel2.setText("Size");

                sizeTf.setToolTipText("");
                sizeTf.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                sizeTfActionPerformed(evt);
                        }
                });

                jLabel3.setText("MatressFeel");

                mattressFeelTf.setToolTipText("");
                mattressFeelTf.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                mattressFeelTfActionPerformed(evt);
                        }
                });

                jLabel4.setText("MatressType");

                mattressTypeTf.setToolTipText("");
                mattressTypeTf.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                mattressTypeTfActionPerformed(evt);
                        }
                });

                jLabel5.setText("Quantity");

                quantityTf.setToolTipText("");
                quantityTf.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                quantityTfActionPerformed(evt);
                        }
                });
                quantityTf.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyTyped(java.awt.event.KeyEvent evt) {
                                quantityTfKeyTyped(evt);
                        }
                });

                deleteDataBtn.setText("Delete Data");
                deleteDataBtn.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                deleteDataBtnActionPerformed(evt);
                        }
                });

                errorMessageTxt.setToolTipText("");

                addDataBtn.setText("Add Data");
                addDataBtn.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                addDataBtnActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(328, 328, 328)
                                                .addComponent(showDatabtn))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(31, 31, 31)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 682, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(285, 285, 285)
                                                .addComponent(jLabel5)
                                                .addGap(18, 18, 18)
                                                .addComponent(quantityTf, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(329, 329, 329)
                                                .addComponent(errorMessageTxt))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(90, 90, 90)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(deleteDataBtn)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel1)
                                                                        .addComponent(jLabel2))
                                                                .addGap(28, 28, 28)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(buyerNameTf)
                                                                        .addComponent(sizeTf, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(149, 149, 149)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel3)
                                                                        .addComponent(jLabel4))))
                                                .addGap(24, 24, 24)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(mattressFeelTf)
                                                        .addComponent(mattressTypeTf, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(58, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addGap(339, 339, 339)
                                        .addComponent(addDataBtn)
                                        .addContainerGap(355, Short.MAX_VALUE)))
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(showDatabtn)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel1)
                                                        .addComponent(buyerNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel2)
                                                        .addComponent(sizeTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel3)
                                                        .addComponent(mattressFeelTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel4)
                                                        .addComponent(mattressTypeTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(quantityTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(errorMessageTxt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                                .addComponent(deleteDataBtn)
                                .addGap(22, 22, 22))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap(547, Short.MAX_VALUE)
                                        .addComponent(addDataBtn)
                                        .addGap(21, 21, 21)))
                );

                deleteDataBtn.setVisible(false);

                pack();
        }// </editor-fold>//GEN-END:initComponents

        private void showDatabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showDatabtnActionPerformed
                // TODO add your handling code here:
		refreshData();
        }//GEN-LAST:event_showDatabtnActionPerformed

        private void buyerNameTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyerNameTfActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_buyerNameTfActionPerformed

        private void sizeTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeTfActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_sizeTfActionPerformed

        private void mattressFeelTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mattressFeelTfActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_mattressFeelTfActionPerformed

        private void mattressTypeTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mattressTypeTfActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_mattressTypeTfActionPerformed

        private void quantityTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityTfActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_quantityTfActionPerformed

	private void deleteDataBtnActionPerformed(java.awt.event.ActionEvent evt){
		System.out.println("deleteing component");
                Connect conn = new Connect();
		conn.executeUpdate("delete from mattress where id = '" + selectedId + "';");
		resetForm();
	}
        private void addDataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDataBtnActionPerformed
		String jenisKasur[] = {"Spring Bed", "Latex", "Foam"};
		String kodeKasur[] = {"SB", "LX", "FO"};
		String tingkatKekerasan[] = {"Soft", "Medium", "Hard"};
		String ukuranKasur[] = {"Single", "Queen", "King"};
		String buyerName = buyerNameTf.getText();
		String size= sizeTf.getText();
		String mattressFeel= mattressFeelTf.getText();
		String mattressType = mattressTypeTf.getText();
		int quantity = Integer.parseInt(quantityTf.getText());
		if(!Arrays.asList(jenisKasur).contains(mattressType)){
			errorMessageTxt.setText("Mattress type harus diantara 'Spring Bed', 'Latex' atau 'Foam'");
			return;
		}
		else if(!Arrays.asList(ukuranKasur).contains(size)){
			errorMessageTxt.setText("Ukuran kasur harus diantara 'King', 'Queen' atau 'Single'");
			return;
		}
		else if(mattressType.equals("Latex")){
			if(!Arrays.asList(tingkatKekerasan).contains(mattressFeel)){
				errorMessageTxt.setText("Ukuran kasur harus diantara 'Soft', 'Medium' atau 'Hard'");
				return;
			}
		}else if(!mattressType.equals("Latex")){
			if(!Arrays.asList(Arrays.copyOf(tingkatKekerasan, tingkatKekerasan.length - 1)).contains(mattressFeel)){
				errorMessageTxt.setText("Ukuran kasur harus diantara 'Soft', 'Medium'");
				return;
			}
		} else if(quantity < 1 || quantity > 10){
				errorMessageTxt.setText("Quantity harus di antara 1 dan 10 ");
				return;
		}
		else{
				errorMessageTxt.setText("");
		}
		int harga = 0;
		int[][] listOfHarga= {{900000, 1400000, 170000},{1300000, 1900000, 2200000}, {500000, 900000, 1300000}};
		int hargaDasar = listOfHarga[findIndexOfString(jenisKasur, mattressType)][findIndexOfString(ukuranKasur, size)];
		if(mattressType.equals("Spring Bed") &&  mattressFeel.equals("Medium")){
			hargaDasar += 150000;
		}
		if(mattressType.equals("Foam") &&  mattressFeel.equals("Medium")){
			hargaDasar += 100000;
		}
		if(mattressType.equals("Latex") &&  mattressFeel.equals("Medium")){
			hargaDasar += 50000;
		}
		if(mattressType.equals("Latex") &&  mattressFeel.equals("Hard")){
			hargaDasar += 150000;
		}
		harga = hargaDasar * quantity;
		String kode = kodeKasur[findIndexOfString(jenisKasur, mattressType)];
                Connect conn = new Connect();
		ResultSet rs = conn.executeQuery("select * from mattress where MattressType = '" + mattressType + "' order by id desc limit 1;");
		String rawId  = "";
                try{
                        while(rs.next()){
                                rawId= rs.getString("ID");
                        }
                }catch(Exception e){
                        System.out.println("" + e);
                }
		String insertQuery = "";
		if(!isUpdating){
			int iId = Integer.parseInt(rawId.substring(2)) + 1;
			String id =  kode + String.format("%03d", iId);
			insertQuery = "INSERT INTO `mattress` (`ID`, `BuyerName`, `MattressType`, `MattressFeel`, `Size`, `Qty`, `TotalPrice`) VALUES ('" +id + "', '" +buyerName +"', '" +mattressType +"', '" + mattressFeel +"', '" + size +"', " +quantity + "," + harga + ");";
		}else{
			insertQuery = "update mattress set BuyerName='"+buyerName +"', MattressFeel = '" + mattressFeel + "', Size = '"+size +" ', Qty = "+ quantity +", MattressType = '"+ mattressType +"', TotalPrice ="+ harga + " where id ='"+ selectedId +"';";
		}
		conn.executeUpdate(insertQuery);
		resetForm();
        }//GEN-LAST:event_addDataBtnActionPerformed
	static int findIndexOfString(String[] arr, String V) {
	    return IntStream.range(0, arr.length)
       	             .filter(i->arr[i].equals(V))
       	             .findFirst()
       	             .getAsInt();
	}
        private void quantityTfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantityTfKeyTyped
                // TODO add your handling code here:
		char c = evt.getKeyChar();
		if(!Character.isDigit(c)){
			evt.consume();
		}
        }//GEN-LAST:event_quantityTfKeyTyped

        private void showDataTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showDataTableMouseClicked
                // TODO add your handling code here:
		 int i = showDataTable.getSelectedRow();
		 TableModel model = showDataTable.getModel();
		 sizeTf.setText(model.getValueAt(i, 4).toString());
		 buyerNameTf.setText(model.getValueAt(i, 1).toString());
		 mattressFeelTf.setText(model.getValueAt(i, 3).toString());
		 mattressTypeTf.setText(model.getValueAt(i, 2).toString());
		 quantityTf.setText(model.getValueAt(i, 5).toString());
		 addDataBtn.setText("update");
		 isUpdating = true;
		 selectedId = model.getValueAt(i, 0).toString();
		 deleteDataBtn.setVisible(true);
        }//GEN-LAST:event_showDataTableMouseClicked

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ShowDataFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ShowDataFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ShowDataFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ShowDataFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ShowDataFrame().setVisible(true);
			}
		});
	}

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton addDataBtn;
        private javax.swing.JTextField buyerNameTf;
        private javax.swing.JButton deleteDataBtn;
        private javax.swing.JLabel errorMessageTxt;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JLabel jLabel3;
        private javax.swing.JLabel jLabel4;
        private javax.swing.JLabel jLabel5;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JTextField mattressFeelTf;
        private javax.swing.JTextField mattressTypeTf;
        private javax.swing.JTextField quantityTf;
        private javax.swing.JTable showDataTable;
        private javax.swing.JButton showDatabtn;
        private javax.swing.JTextField sizeTf;
        // End of variables declaration//GEN-END:variables
}
